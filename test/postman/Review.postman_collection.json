{
	"info": {
		"_postman_id": "2741f2e9-4014-481b-97a3-aa58f16fd43f",
		"name": "Review",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43196341"
	},
	"item": [
		{
			"name": "create assignament",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const iat = Math.floor(Date.now() / 1000);\r",
							"const exp = iat + 60 * 15; // 15 minuti\r",
							"\r",
							"pm.environment.set(\"jwt_iat\", iat);\r",
							"pm.environment.set(\"jwt_exp\", exp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type è JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"La risposta ha il campo 'message'\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"message\");\r",
							"});\r",
							"\r",
							"pm.test(\"Header Location presente\", function () {\r",
							"  pm.expect(pm.response.headers.has(\"Location\")).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Location punta a /assignments/<uuid>\", function () {\r",
							"  const loc = pm.response.headers.get(\"Location\");\r",
							"  pm.expect(loc).to.match(/\\/api\\/v1\\/assignments\\/as-\\d{5}$/);\r",
							"});\r",
							"\r",
							"const location_assignament = pm.response.headers.get(\"Location\");\r",
							"pm.environment.set(\"assignment_id\", location_assignament.split(\"/\").pop());\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n  \"sub\": \"{{teacher_id}}\",\r\n  \"role\": \"teacher\",\r\n  \"iat\": {{jwt_iat}},\r\n  \"exp\": {{jwt_exp}}\r\n}",
							"type": "string"
						},
						{
							"key": "privateKey",
							"value": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC96giTw8Q8b71p\nqVzIibow9DEIf6mXPVFpq+ZN+7nHd9cvvjBkqbQLaVvE9KqEbuRxGEdWdJcqE0md\nEMuukhfM7kCav13sdtUk6CrEsmhKN72KYsRht03/j+BaVrIgkTWh8nlQNuj+ieDL\nqEVUuGEAYqVcsSGskJFaGVUObbwyywGhVeDikLPCvkh8QwNTyF0OjfvtD/CPyYLi\nsOzmsr79zC8yWsTfiwe4d2uQ0RUTSdvYNwd9qcuYGX1rQX4q5PEDKsUNM/gJxnen\nArOL+0umZ6XG3ScOP0ZRymnwLViMF7Tjhkw14qCHDllC3J+mMav+rwIMYjkesZMO\nAbL6xUe9AgMBAAECggEAXjsvglISnoI7E6BrXz2nWv7vDW56sYZFTQ90OKF8btKx\nvQi7blcd9MOUO0fDC+8R/mOzkdxL3R6w2fQpfDcVBCP7fk0Rx3C3FZb1EaAMSzcZ\nHv8evfV8CCBVi72UqMAkQnTTaM+2EAZNuf+GVyEdUFmh/zoMoVkiJfiH0Z71UKW6\n9igkivgBB0Z6wUlOwP0mpogR+j5Y0e0Z/Eh/ScJfuJhmDNtlrFNcGDz1Y3ddtXjC\nnL/lHRTZU5EhuWZHXAs6jmv6YOnUlH9VYN6moKlBrtC2oeb1+FvKQC8yZdbrqMti\n7gj3bcAVFiiumGtp5DJrIP47hOGdw041EVvERTMA6QKBgQDkq67g19BO+lCDVnIm\nFp+Qh34FxoA5pzv4pK1kz76G9duptCpvO7nQXERFGMjPZTJZR82+lq1YaM+30SfM\nLghOkW910Go77e8ts9SMInwjuTg1+8WGG20Ym/odg6/LU4f69WpY2K/7jE/GzZpW\ns+FH/uEaeqywD5EASlVcGerT/wKBgQDUnJLPNSYbcqMxbcVGhjOmcVAKSULWoffW\nB0OiJVT6DPIPNKXOA3n8JVnq7ubuNZMv9Arcwc/rZT48fT1SDNaplF3jK/BoqDGW\nkGkvtxbvrzGRDtS+kgmgyqIQ9kgJtEM9F3DiUnqwA9DAdOWPOFiNSZ9boitqAKBP\ngSzKgMA0QwKBgC7UDcsTxx/1WPmcgWHVbjXd2Wv7W5Ty73Aa4Tts47qlrKdTMwF2\nfLXzvzNbQPxf3/CyqKqoFrWtOSSOm5TPtHnKhMXeuXKuZjW4xwUvprZ2HtHHTosJ\nIM1SW+Uha6W65HT7Px0Uuu1LraarwjiRO8hPpO+UQbsIZQxnLJXg5NsnAoGAWoL9\njPDXdD/tcZGFtmxTeLwskvR1W+JAHAGjrVevQXRZaFfFblrUh59vFDD4Ztiv/G4s\nYaaw2UmUoTO/8zo7+J2NCrUd97ACzFJWNVYAkbFHrLVfpHGPX8BkFkyChn8TUOK1\nz+PFD0HQkN4zDDG0oRGCogP773isxqv7YYpGSPkCgYB89iD+Ay+C8OcnC+iOd0jl\nAUOEKksJroGx9p/ENjICQC7XuSQztYBGbLiJDTojHcXMICcY8xvucdGeZopUBa6o\nncrlwnG4X3K4kHSoRqspvC6or2ZNChRKJr9gDlbwese7sEQH9eRfJS+gi6I49v+w\nygLgR03UG5jC+9x6ucRhpw==\n-----END PRIVATE KEY-----",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "RS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Esercizio UML7\",\r\n  \"description\": \"Realizzare un diagramma delle classi per un sistema e-commerce.\",\r\n  \"deadline\": \"2025-09-15T23:59:00\",\r\n  \"teacherId\": \"prof123\",\r\n  \"students\": [\"{{student_id}}\", \"stu002\", \"stu003\"],\r\n  \"content\": \"Disegna un diagramma UML con almeno 5 classi, includendo relazioni e attributi principali.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{assignment_url}}/api/v1/assignments",
					"host": [
						"{{assignment_url}}"
					],
					"path": [
						"api",
						"v1",
						"assignments"
					]
				}
			},
			"response": []
		},
		{
			"name": "create review",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const iat = Math.floor(Date.now() / 1000);\r",
							"const exp = iat + 60 * 15; // 15 minuti\r",
							"\r",
							"pm.environment.set(\"jwt_iat\", iat);\r",
							"pm.environment.set(\"jwt_exp\", exp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type è JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"La risposta ha il campo 'message'\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"message\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n  \"sub\": \"{{teacher_id}}\",\r\n  \"role\": \"teacher\",\r\n  \"iat\": {{jwt_iat}},\r\n  \"exp\": {{jwt_exp}}\r\n}",
							"type": "string"
						},
						{
							"key": "privateKey",
							"value": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC96giTw8Q8b71p\nqVzIibow9DEIf6mXPVFpq+ZN+7nHd9cvvjBkqbQLaVvE9KqEbuRxGEdWdJcqE0md\nEMuukhfM7kCav13sdtUk6CrEsmhKN72KYsRht03/j+BaVrIgkTWh8nlQNuj+ieDL\nqEVUuGEAYqVcsSGskJFaGVUObbwyywGhVeDikLPCvkh8QwNTyF0OjfvtD/CPyYLi\nsOzmsr79zC8yWsTfiwe4d2uQ0RUTSdvYNwd9qcuYGX1rQX4q5PEDKsUNM/gJxnen\nArOL+0umZ6XG3ScOP0ZRymnwLViMF7Tjhkw14qCHDllC3J+mMav+rwIMYjkesZMO\nAbL6xUe9AgMBAAECggEAXjsvglISnoI7E6BrXz2nWv7vDW56sYZFTQ90OKF8btKx\nvQi7blcd9MOUO0fDC+8R/mOzkdxL3R6w2fQpfDcVBCP7fk0Rx3C3FZb1EaAMSzcZ\nHv8evfV8CCBVi72UqMAkQnTTaM+2EAZNuf+GVyEdUFmh/zoMoVkiJfiH0Z71UKW6\n9igkivgBB0Z6wUlOwP0mpogR+j5Y0e0Z/Eh/ScJfuJhmDNtlrFNcGDz1Y3ddtXjC\nnL/lHRTZU5EhuWZHXAs6jmv6YOnUlH9VYN6moKlBrtC2oeb1+FvKQC8yZdbrqMti\n7gj3bcAVFiiumGtp5DJrIP47hOGdw041EVvERTMA6QKBgQDkq67g19BO+lCDVnIm\nFp+Qh34FxoA5pzv4pK1kz76G9duptCpvO7nQXERFGMjPZTJZR82+lq1YaM+30SfM\nLghOkW910Go77e8ts9SMInwjuTg1+8WGG20Ym/odg6/LU4f69WpY2K/7jE/GzZpW\ns+FH/uEaeqywD5EASlVcGerT/wKBgQDUnJLPNSYbcqMxbcVGhjOmcVAKSULWoffW\nB0OiJVT6DPIPNKXOA3n8JVnq7ubuNZMv9Arcwc/rZT48fT1SDNaplF3jK/BoqDGW\nkGkvtxbvrzGRDtS+kgmgyqIQ9kgJtEM9F3DiUnqwA9DAdOWPOFiNSZ9boitqAKBP\ngSzKgMA0QwKBgC7UDcsTxx/1WPmcgWHVbjXd2Wv7W5Ty73Aa4Tts47qlrKdTMwF2\nfLXzvzNbQPxf3/CyqKqoFrWtOSSOm5TPtHnKhMXeuXKuZjW4xwUvprZ2HtHHTosJ\nIM1SW+Uha6W65HT7Px0Uuu1LraarwjiRO8hPpO+UQbsIZQxnLJXg5NsnAoGAWoL9\njPDXdD/tcZGFtmxTeLwskvR1W+JAHAGjrVevQXRZaFfFblrUh59vFDD4Ztiv/G4s\nYaaw2UmUoTO/8zo7+J2NCrUd97ACzFJWNVYAkbFHrLVfpHGPX8BkFkyChn8TUOK1\nz+PFD0HQkN4zDDG0oRGCogP773isxqv7YYpGSPkCgYB89iD+Ay+C8OcnC+iOd0jl\nAUOEKksJroGx9p/ENjICQC7XuSQztYBGbLiJDTojHcXMICcY8xvucdGeZopUBa6o\nncrlwnG4X3K4kHSoRqspvC6or2ZNChRKJr9gDlbwese7sEQH9eRfJS+gi6I49v+w\nygLgR03UG5jC+9x6ucRhpw==\n-----END PRIVATE KEY-----",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "RS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": \"{{assignment_id}}\",\r\n  \"deadline\": \"2025-10-15T23:59:00\",\r\n  \"lista_assegnazioni\": [\r\n    { \"reviewer\": \"{{student_id}}\", \"submissionId\": \"SUB-8503\" },\r\n    { \"reviewer\": \"st002\", \"submissionId\": \"{{submission_id}}\" },\r\n    { \"reviewer\": \"st003\", \"submissionId\": \"SUB-9003\" }\r\n  ],\r\n  \"rubrica\": [\r\n    { \"criterio\": \"Chiarezza\" },\r\n    { \"criterio\": \"Correttezza\" },\r\n    { \"criterio\": \"Completezza\" }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{review_url}}/api/v1/reviews/process",
					"host": [
						"{{review_url}}"
					],
					"path": [
						"api",
						"v1",
						"reviews",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "get reviews for assignment as teacher",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"La risposta è un array\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Ogni oggetto ha i campi richiesti\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(item).to.have.property(\"deadline\");\r",
							"        pm.expect(item).to.have.property(\"assignmentId\");\r",
							"        pm.expect(item).to.have.property(\"submissionId\");\r",
							"        pm.expect(item).to.have.property(\"reviewerId\");\r",
							"        pm.expect(item).to.have.property(\"createdAt\");\r",
							"        pm.expect(item).to.have.property(\"stato\");\r",
							"        pm.expect(item).to.have.property(\"valutazione\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const iat = Math.floor(Date.now() / 1000);\r",
							"const exp = iat + 60 * 15; // 15 minuti\r",
							"\r",
							"pm.environment.set(\"jwt_iat\", iat);\r",
							"pm.environment.set(\"jwt_exp\", exp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n  \"sub\": \"{{teacher_id}}\",\r\n  \"role\": \"teacher\",\r\n  \"iat\": {{jwt_iat}},\r\n  \"exp\": {{jwt_exp}}\r\n}",
							"type": "string"
						},
						{
							"key": "privateKey",
							"value": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC96giTw8Q8b71p\nqVzIibow9DEIf6mXPVFpq+ZN+7nHd9cvvjBkqbQLaVvE9KqEbuRxGEdWdJcqE0md\nEMuukhfM7kCav13sdtUk6CrEsmhKN72KYsRht03/j+BaVrIgkTWh8nlQNuj+ieDL\nqEVUuGEAYqVcsSGskJFaGVUObbwyywGhVeDikLPCvkh8QwNTyF0OjfvtD/CPyYLi\nsOzmsr79zC8yWsTfiwe4d2uQ0RUTSdvYNwd9qcuYGX1rQX4q5PEDKsUNM/gJxnen\nArOL+0umZ6XG3ScOP0ZRymnwLViMF7Tjhkw14qCHDllC3J+mMav+rwIMYjkesZMO\nAbL6xUe9AgMBAAECggEAXjsvglISnoI7E6BrXz2nWv7vDW56sYZFTQ90OKF8btKx\nvQi7blcd9MOUO0fDC+8R/mOzkdxL3R6w2fQpfDcVBCP7fk0Rx3C3FZb1EaAMSzcZ\nHv8evfV8CCBVi72UqMAkQnTTaM+2EAZNuf+GVyEdUFmh/zoMoVkiJfiH0Z71UKW6\n9igkivgBB0Z6wUlOwP0mpogR+j5Y0e0Z/Eh/ScJfuJhmDNtlrFNcGDz1Y3ddtXjC\nnL/lHRTZU5EhuWZHXAs6jmv6YOnUlH9VYN6moKlBrtC2oeb1+FvKQC8yZdbrqMti\n7gj3bcAVFiiumGtp5DJrIP47hOGdw041EVvERTMA6QKBgQDkq67g19BO+lCDVnIm\nFp+Qh34FxoA5pzv4pK1kz76G9duptCpvO7nQXERFGMjPZTJZR82+lq1YaM+30SfM\nLghOkW910Go77e8ts9SMInwjuTg1+8WGG20Ym/odg6/LU4f69WpY2K/7jE/GzZpW\ns+FH/uEaeqywD5EASlVcGerT/wKBgQDUnJLPNSYbcqMxbcVGhjOmcVAKSULWoffW\nB0OiJVT6DPIPNKXOA3n8JVnq7ubuNZMv9Arcwc/rZT48fT1SDNaplF3jK/BoqDGW\nkGkvtxbvrzGRDtS+kgmgyqIQ9kgJtEM9F3DiUnqwA9DAdOWPOFiNSZ9boitqAKBP\ngSzKgMA0QwKBgC7UDcsTxx/1WPmcgWHVbjXd2Wv7W5Ty73Aa4Tts47qlrKdTMwF2\nfLXzvzNbQPxf3/CyqKqoFrWtOSSOm5TPtHnKhMXeuXKuZjW4xwUvprZ2HtHHTosJ\nIM1SW+Uha6W65HT7Px0Uuu1LraarwjiRO8hPpO+UQbsIZQxnLJXg5NsnAoGAWoL9\njPDXdD/tcZGFtmxTeLwskvR1W+JAHAGjrVevQXRZaFfFblrUh59vFDD4Ztiv/G4s\nYaaw2UmUoTO/8zo7+J2NCrUd97ACzFJWNVYAkbFHrLVfpHGPX8BkFkyChn8TUOK1\nz+PFD0HQkN4zDDG0oRGCogP773isxqv7YYpGSPkCgYB89iD+Ay+C8OcnC+iOd0jl\nAUOEKksJroGx9p/ENjICQC7XuSQztYBGbLiJDTojHcXMICcY8xvucdGeZopUBa6o\nncrlwnG4X3K4kHSoRqspvC6or2ZNChRKJr9gDlbwese7sEQH9eRfJS+gi6I49v+w\nygLgR03UG5jC+9x6ucRhpw==\n-----END PRIVATE KEY-----",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "RS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{review_url}}/api/v1/reviews/assignment/{{assignment_id}}",
					"host": [
						"{{review_url}}"
					],
					"path": [
						"api",
						"v1",
						"reviews",
						"assignment",
						"{{assignment_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get reviews for assignment as student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const iat = Math.floor(Date.now() / 1000);\r",
							"const exp = iat + 60 * 15; // 15 minuti\r",
							"\r",
							"pm.environment.set(\"jwt_iat\", iat);\r",
							"pm.environment.set(\"jwt_exp\", exp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n  \"sub\": \"{{student_id}}\",\r\n  \"role\": \"student\",\r\n  \"iat\": {{jwt_iat}},\r\n  \"exp\": {{jwt_exp}}\r\n}",
							"type": "string"
						},
						{
							"key": "privateKey",
							"value": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC96giTw8Q8b71p\nqVzIibow9DEIf6mXPVFpq+ZN+7nHd9cvvjBkqbQLaVvE9KqEbuRxGEdWdJcqE0md\nEMuukhfM7kCav13sdtUk6CrEsmhKN72KYsRht03/j+BaVrIgkTWh8nlQNuj+ieDL\nqEVUuGEAYqVcsSGskJFaGVUObbwyywGhVeDikLPCvkh8QwNTyF0OjfvtD/CPyYLi\nsOzmsr79zC8yWsTfiwe4d2uQ0RUTSdvYNwd9qcuYGX1rQX4q5PEDKsUNM/gJxnen\nArOL+0umZ6XG3ScOP0ZRymnwLViMF7Tjhkw14qCHDllC3J+mMav+rwIMYjkesZMO\nAbL6xUe9AgMBAAECggEAXjsvglISnoI7E6BrXz2nWv7vDW56sYZFTQ90OKF8btKx\nvQi7blcd9MOUO0fDC+8R/mOzkdxL3R6w2fQpfDcVBCP7fk0Rx3C3FZb1EaAMSzcZ\nHv8evfV8CCBVi72UqMAkQnTTaM+2EAZNuf+GVyEdUFmh/zoMoVkiJfiH0Z71UKW6\n9igkivgBB0Z6wUlOwP0mpogR+j5Y0e0Z/Eh/ScJfuJhmDNtlrFNcGDz1Y3ddtXjC\nnL/lHRTZU5EhuWZHXAs6jmv6YOnUlH9VYN6moKlBrtC2oeb1+FvKQC8yZdbrqMti\n7gj3bcAVFiiumGtp5DJrIP47hOGdw041EVvERTMA6QKBgQDkq67g19BO+lCDVnIm\nFp+Qh34FxoA5pzv4pK1kz76G9duptCpvO7nQXERFGMjPZTJZR82+lq1YaM+30SfM\nLghOkW910Go77e8ts9SMInwjuTg1+8WGG20Ym/odg6/LU4f69WpY2K/7jE/GzZpW\ns+FH/uEaeqywD5EASlVcGerT/wKBgQDUnJLPNSYbcqMxbcVGhjOmcVAKSULWoffW\nB0OiJVT6DPIPNKXOA3n8JVnq7ubuNZMv9Arcwc/rZT48fT1SDNaplF3jK/BoqDGW\nkGkvtxbvrzGRDtS+kgmgyqIQ9kgJtEM9F3DiUnqwA9DAdOWPOFiNSZ9boitqAKBP\ngSzKgMA0QwKBgC7UDcsTxx/1WPmcgWHVbjXd2Wv7W5Ty73Aa4Tts47qlrKdTMwF2\nfLXzvzNbQPxf3/CyqKqoFrWtOSSOm5TPtHnKhMXeuXKuZjW4xwUvprZ2HtHHTosJ\nIM1SW+Uha6W65HT7Px0Uuu1LraarwjiRO8hPpO+UQbsIZQxnLJXg5NsnAoGAWoL9\njPDXdD/tcZGFtmxTeLwskvR1W+JAHAGjrVevQXRZaFfFblrUh59vFDD4Ztiv/G4s\nYaaw2UmUoTO/8zo7+J2NCrUd97ACzFJWNVYAkbFHrLVfpHGPX8BkFkyChn8TUOK1\nz+PFD0HQkN4zDDG0oRGCogP773isxqv7YYpGSPkCgYB89iD+Ay+C8OcnC+iOd0jl\nAUOEKksJroGx9p/ENjICQC7XuSQztYBGbLiJDTojHcXMICcY8xvucdGeZopUBa6o\nncrlwnG4X3K4kHSoRqspvC6or2ZNChRKJr9gDlbwese7sEQH9eRfJS+gi6I49v+w\nygLgR03UG5jC+9x6ucRhpw==\n-----END PRIVATE KEY-----",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "RS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{review_url}}/api/v1/reviews/assignment/{{assignment_id}}",
					"host": [
						"{{review_url}}"
					],
					"path": [
						"api",
						"v1",
						"reviews",
						"assignment",
						"{{assignment_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get pending reviews as student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData;\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is JSON\", function () {\r",
							"  pm.expect(function () { jsonData = pm.response.json(); }).to.not.throw();\r",
							"});\r",
							"\r",
							"pm.test(\"La risposta è un array\", function () {\r",
							"  pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Ogni oggetto ha i campi richiesti\", function () {\r",
							"  jsonData.forEach(item => {\r",
							"    pm.expect(item).to.have.property(\"deadline\");\r",
							"    pm.expect(item).to.have.property(\"assignmentId\");\r",
							"    pm.expect(item).to.have.property(\"submissionId\");\r",
							"    pm.expect(item).to.have.property(\"reviewerId\");\r",
							"    pm.expect(item).to.have.property(\"createdAt\");\r",
							"    pm.expect(item).to.have.property(\"stato\");\r",
							"    pm.expect(item).to.have.property(\"valutazione\");\r",
							"  });\r",
							"});\r",
							"\r",
							"pm.test(\"Ogni elemento di 'valutazione' ha le proprietà corrette\", function () {\r",
							"  jsonData.forEach(item => {\r",
							"    if (Array.isArray(item.valutazione)) {\r",
							"      item.valutazione.forEach(v => {\r",
							"        pm.expect(v).to.have.all.keys(\"criterio\", \"punteggio\");\r",
							"        pm.expect(v.punteggio).to.be.a(\"number\");\r",
							"      });\r",
							"    }\r",
							"  });\r",
							"});\r",
							"\r",
							"// salva review_id se presente\r",
							"if (Array.isArray(jsonData) && jsonData.length && jsonData[0].reviewId) {\r",
							"  pm.environment.set(\"review_id\", String(jsonData[0].reviewId));\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const iat = Math.floor(Date.now() / 1000);\r",
							"const exp = iat + 60 * 15; // 15 minuti\r",
							"\r",
							"pm.environment.set(\"jwt_iat\", iat);\r",
							"pm.environment.set(\"jwt_exp\", exp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n  \"sub\": \"{{student_id}}\",\r\n  \"role\": \"student\",\r\n  \"iat\": {{jwt_iat}},\r\n  \"exp\": {{jwt_exp}}\r\n}",
							"type": "string"
						},
						{
							"key": "privateKey",
							"value": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC96giTw8Q8b71p\nqVzIibow9DEIf6mXPVFpq+ZN+7nHd9cvvjBkqbQLaVvE9KqEbuRxGEdWdJcqE0md\nEMuukhfM7kCav13sdtUk6CrEsmhKN72KYsRht03/j+BaVrIgkTWh8nlQNuj+ieDL\nqEVUuGEAYqVcsSGskJFaGVUObbwyywGhVeDikLPCvkh8QwNTyF0OjfvtD/CPyYLi\nsOzmsr79zC8yWsTfiwe4d2uQ0RUTSdvYNwd9qcuYGX1rQX4q5PEDKsUNM/gJxnen\nArOL+0umZ6XG3ScOP0ZRymnwLViMF7Tjhkw14qCHDllC3J+mMav+rwIMYjkesZMO\nAbL6xUe9AgMBAAECggEAXjsvglISnoI7E6BrXz2nWv7vDW56sYZFTQ90OKF8btKx\nvQi7blcd9MOUO0fDC+8R/mOzkdxL3R6w2fQpfDcVBCP7fk0Rx3C3FZb1EaAMSzcZ\nHv8evfV8CCBVi72UqMAkQnTTaM+2EAZNuf+GVyEdUFmh/zoMoVkiJfiH0Z71UKW6\n9igkivgBB0Z6wUlOwP0mpogR+j5Y0e0Z/Eh/ScJfuJhmDNtlrFNcGDz1Y3ddtXjC\nnL/lHRTZU5EhuWZHXAs6jmv6YOnUlH9VYN6moKlBrtC2oeb1+FvKQC8yZdbrqMti\n7gj3bcAVFiiumGtp5DJrIP47hOGdw041EVvERTMA6QKBgQDkq67g19BO+lCDVnIm\nFp+Qh34FxoA5pzv4pK1kz76G9duptCpvO7nQXERFGMjPZTJZR82+lq1YaM+30SfM\nLghOkW910Go77e8ts9SMInwjuTg1+8WGG20Ym/odg6/LU4f69WpY2K/7jE/GzZpW\ns+FH/uEaeqywD5EASlVcGerT/wKBgQDUnJLPNSYbcqMxbcVGhjOmcVAKSULWoffW\nB0OiJVT6DPIPNKXOA3n8JVnq7ubuNZMv9Arcwc/rZT48fT1SDNaplF3jK/BoqDGW\nkGkvtxbvrzGRDtS+kgmgyqIQ9kgJtEM9F3DiUnqwA9DAdOWPOFiNSZ9boitqAKBP\ngSzKgMA0QwKBgC7UDcsTxx/1WPmcgWHVbjXd2Wv7W5Ty73Aa4Tts47qlrKdTMwF2\nfLXzvzNbQPxf3/CyqKqoFrWtOSSOm5TPtHnKhMXeuXKuZjW4xwUvprZ2HtHHTosJ\nIM1SW+Uha6W65HT7Px0Uuu1LraarwjiRO8hPpO+UQbsIZQxnLJXg5NsnAoGAWoL9\njPDXdD/tcZGFtmxTeLwskvR1W+JAHAGjrVevQXRZaFfFblrUh59vFDD4Ztiv/G4s\nYaaw2UmUoTO/8zo7+J2NCrUd97ACzFJWNVYAkbFHrLVfpHGPX8BkFkyChn8TUOK1\nz+PFD0HQkN4zDDG0oRGCogP773isxqv7YYpGSPkCgYB89iD+Ay+C8OcnC+iOd0jl\nAUOEKksJroGx9p/ENjICQC7XuSQztYBGbLiJDTojHcXMICcY8xvucdGeZopUBa6o\nncrlwnG4X3K4kHSoRqspvC6or2ZNChRKJr9gDlbwese7sEQH9eRfJS+gi6I49v+w\nygLgR03UG5jC+9x6ucRhpw==\n-----END PRIVATE KEY-----",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "RS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{review_url}}/api/v1/reviews?stato=pending",
					"host": [
						"{{review_url}}"
					],
					"path": [
						"api",
						"v1",
						"reviews"
					],
					"query": [
						{
							"key": "stato",
							"value": "pending"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get complete reviews as student (none)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"    let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"La risposta è un array\", function () {\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"// Test to verify that the array is empty\r",
							"pm.test(\"L'array è vuoto\", function () {\r",
							"    pm.expect(jsonData.length).to.equal(0, \"L'array deve essere vuoto\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const iat = Math.floor(Date.now() / 1000);\r",
							"const exp = iat + 60 * 15; // 15 minuti\r",
							"\r",
							"pm.environment.set(\"jwt_iat\", iat);\r",
							"pm.environment.set(\"jwt_exp\", exp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n  \"sub\": \"{{student_id}}\",\r\n  \"role\": \"student\",\r\n  \"iat\": {{jwt_iat}},\r\n  \"exp\": {{jwt_exp}}\r\n}",
							"type": "string"
						},
						{
							"key": "privateKey",
							"value": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC96giTw8Q8b71p\nqVzIibow9DEIf6mXPVFpq+ZN+7nHd9cvvjBkqbQLaVvE9KqEbuRxGEdWdJcqE0md\nEMuukhfM7kCav13sdtUk6CrEsmhKN72KYsRht03/j+BaVrIgkTWh8nlQNuj+ieDL\nqEVUuGEAYqVcsSGskJFaGVUObbwyywGhVeDikLPCvkh8QwNTyF0OjfvtD/CPyYLi\nsOzmsr79zC8yWsTfiwe4d2uQ0RUTSdvYNwd9qcuYGX1rQX4q5PEDKsUNM/gJxnen\nArOL+0umZ6XG3ScOP0ZRymnwLViMF7Tjhkw14qCHDllC3J+mMav+rwIMYjkesZMO\nAbL6xUe9AgMBAAECggEAXjsvglISnoI7E6BrXz2nWv7vDW56sYZFTQ90OKF8btKx\nvQi7blcd9MOUO0fDC+8R/mOzkdxL3R6w2fQpfDcVBCP7fk0Rx3C3FZb1EaAMSzcZ\nHv8evfV8CCBVi72UqMAkQnTTaM+2EAZNuf+GVyEdUFmh/zoMoVkiJfiH0Z71UKW6\n9igkivgBB0Z6wUlOwP0mpogR+j5Y0e0Z/Eh/ScJfuJhmDNtlrFNcGDz1Y3ddtXjC\nnL/lHRTZU5EhuWZHXAs6jmv6YOnUlH9VYN6moKlBrtC2oeb1+FvKQC8yZdbrqMti\n7gj3bcAVFiiumGtp5DJrIP47hOGdw041EVvERTMA6QKBgQDkq67g19BO+lCDVnIm\nFp+Qh34FxoA5pzv4pK1kz76G9duptCpvO7nQXERFGMjPZTJZR82+lq1YaM+30SfM\nLghOkW910Go77e8ts9SMInwjuTg1+8WGG20Ym/odg6/LU4f69WpY2K/7jE/GzZpW\ns+FH/uEaeqywD5EASlVcGerT/wKBgQDUnJLPNSYbcqMxbcVGhjOmcVAKSULWoffW\nB0OiJVT6DPIPNKXOA3n8JVnq7ubuNZMv9Arcwc/rZT48fT1SDNaplF3jK/BoqDGW\nkGkvtxbvrzGRDtS+kgmgyqIQ9kgJtEM9F3DiUnqwA9DAdOWPOFiNSZ9boitqAKBP\ngSzKgMA0QwKBgC7UDcsTxx/1WPmcgWHVbjXd2Wv7W5Ty73Aa4Tts47qlrKdTMwF2\nfLXzvzNbQPxf3/CyqKqoFrWtOSSOm5TPtHnKhMXeuXKuZjW4xwUvprZ2HtHHTosJ\nIM1SW+Uha6W65HT7Px0Uuu1LraarwjiRO8hPpO+UQbsIZQxnLJXg5NsnAoGAWoL9\njPDXdD/tcZGFtmxTeLwskvR1W+JAHAGjrVevQXRZaFfFblrUh59vFDD4Ztiv/G4s\nYaaw2UmUoTO/8zo7+J2NCrUd97ACzFJWNVYAkbFHrLVfpHGPX8BkFkyChn8TUOK1\nz+PFD0HQkN4zDDG0oRGCogP773isxqv7YYpGSPkCgYB89iD+Ay+C8OcnC+iOd0jl\nAUOEKksJroGx9p/ENjICQC7XuSQztYBGbLiJDTojHcXMICcY8xvucdGeZopUBa6o\nncrlwnG4X3K4kHSoRqspvC6or2ZNChRKJr9gDlbwese7sEQH9eRfJS+gi6I49v+w\nygLgR03UG5jC+9x6ucRhpw==\n-----END PRIVATE KEY-----",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "RS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{review_url}}/api/v1/reviews?stato=complete",
					"host": [
						"{{review_url}}"
					],
					"path": [
						"api",
						"v1",
						"reviews"
					],
					"query": [
						{
							"key": "stato",
							"value": "complete"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get single review by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"La risposta è un singolo oggetto JSON\", function () {\r",
							"  pm.expect(() => { jsonData = pm.response.json(); }).to.not.throw();\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(Array.isArray(jsonData)).to.be.false;\r",
							"});\r",
							"\r",
							"// Test the response body structure and properties\r",
							"pm.test(\"Response body structure is valid\", function () {\r",
							"    pm.expect(jsonData).to.have.all.keys('reviewId', 'assignmentId', 'submissionId', 'reviewerId', 'createdAt', 'deadline', 'stato', 'valutazione');\r",
							"});\r",
							"\r",
							"// Test that each element in the valutazione array has the required properties\r",
							"pm.test(\"Each element in the valutazione array has the correct properties\", function () {\r",
							"    jsonData.valutazione.forEach(function(valutazione) {\r",
							"        pm.expect(valutazione).to.have.all.keys('criterio', 'punteggio');\r",
							"        pm.expect(valutazione.punteggio).to.be.a('number');\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const iat = Math.floor(Date.now() / 1000);\r",
							"const exp = iat + 60 * 15; // 15 minuti\r",
							"\r",
							"pm.environment.set(\"jwt_iat\", iat);\r",
							"pm.environment.set(\"jwt_exp\", exp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n  \"sub\": \"{{student_id}}\",\r\n  \"role\": \"student\",\r\n  \"iat\": {{jwt_iat}},\r\n  \"exp\": {{jwt_exp}}\r\n}",
							"type": "string"
						},
						{
							"key": "privateKey",
							"value": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC96giTw8Q8b71p\nqVzIibow9DEIf6mXPVFpq+ZN+7nHd9cvvjBkqbQLaVvE9KqEbuRxGEdWdJcqE0md\nEMuukhfM7kCav13sdtUk6CrEsmhKN72KYsRht03/j+BaVrIgkTWh8nlQNuj+ieDL\nqEVUuGEAYqVcsSGskJFaGVUObbwyywGhVeDikLPCvkh8QwNTyF0OjfvtD/CPyYLi\nsOzmsr79zC8yWsTfiwe4d2uQ0RUTSdvYNwd9qcuYGX1rQX4q5PEDKsUNM/gJxnen\nArOL+0umZ6XG3ScOP0ZRymnwLViMF7Tjhkw14qCHDllC3J+mMav+rwIMYjkesZMO\nAbL6xUe9AgMBAAECggEAXjsvglISnoI7E6BrXz2nWv7vDW56sYZFTQ90OKF8btKx\nvQi7blcd9MOUO0fDC+8R/mOzkdxL3R6w2fQpfDcVBCP7fk0Rx3C3FZb1EaAMSzcZ\nHv8evfV8CCBVi72UqMAkQnTTaM+2EAZNuf+GVyEdUFmh/zoMoVkiJfiH0Z71UKW6\n9igkivgBB0Z6wUlOwP0mpogR+j5Y0e0Z/Eh/ScJfuJhmDNtlrFNcGDz1Y3ddtXjC\nnL/lHRTZU5EhuWZHXAs6jmv6YOnUlH9VYN6moKlBrtC2oeb1+FvKQC8yZdbrqMti\n7gj3bcAVFiiumGtp5DJrIP47hOGdw041EVvERTMA6QKBgQDkq67g19BO+lCDVnIm\nFp+Qh34FxoA5pzv4pK1kz76G9duptCpvO7nQXERFGMjPZTJZR82+lq1YaM+30SfM\nLghOkW910Go77e8ts9SMInwjuTg1+8WGG20Ym/odg6/LU4f69WpY2K/7jE/GzZpW\ns+FH/uEaeqywD5EASlVcGerT/wKBgQDUnJLPNSYbcqMxbcVGhjOmcVAKSULWoffW\nB0OiJVT6DPIPNKXOA3n8JVnq7ubuNZMv9Arcwc/rZT48fT1SDNaplF3jK/BoqDGW\nkGkvtxbvrzGRDtS+kgmgyqIQ9kgJtEM9F3DiUnqwA9DAdOWPOFiNSZ9boitqAKBP\ngSzKgMA0QwKBgC7UDcsTxx/1WPmcgWHVbjXd2Wv7W5Ty73Aa4Tts47qlrKdTMwF2\nfLXzvzNbQPxf3/CyqKqoFrWtOSSOm5TPtHnKhMXeuXKuZjW4xwUvprZ2HtHHTosJ\nIM1SW+Uha6W65HT7Px0Uuu1LraarwjiRO8hPpO+UQbsIZQxnLJXg5NsnAoGAWoL9\njPDXdD/tcZGFtmxTeLwskvR1W+JAHAGjrVevQXRZaFfFblrUh59vFDD4Ztiv/G4s\nYaaw2UmUoTO/8zo7+J2NCrUd97ACzFJWNVYAkbFHrLVfpHGPX8BkFkyChn8TUOK1\nz+PFD0HQkN4zDDG0oRGCogP773isxqv7YYpGSPkCgYB89iD+Ay+C8OcnC+iOd0jl\nAUOEKksJroGx9p/ENjICQC7XuSQztYBGbLiJDTojHcXMICcY8xvucdGeZopUBa6o\nncrlwnG4X3K4kHSoRqspvC6or2ZNChRKJr9gDlbwese7sEQH9eRfJS+gi6I49v+w\nygLgR03UG5jC+9x6ucRhpw==\n-----END PRIVATE KEY-----",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "RS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{review_url}}/api/v1/reviews/{{review_id}}",
					"host": [
						"{{review_url}}"
					],
					"path": [
						"api",
						"v1",
						"reviews",
						"{{review_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch review",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const iat = Math.floor(Date.now() / 1000);\r",
							"const exp = iat + 60 * 15; // 15 minuti\r",
							"\r",
							"pm.environment.set(\"jwt_iat\", iat);\r",
							"pm.environment.set(\"jwt_exp\", exp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n  \"sub\": \"{{student_id}}\",\r\n  \"role\": \"student\",\r\n  \"iat\": {{jwt_iat}},\r\n  \"exp\": {{jwt_exp}}\r\n}",
							"type": "string"
						},
						{
							"key": "privateKey",
							"value": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC96giTw8Q8b71p\nqVzIibow9DEIf6mXPVFpq+ZN+7nHd9cvvjBkqbQLaVvE9KqEbuRxGEdWdJcqE0md\nEMuukhfM7kCav13sdtUk6CrEsmhKN72KYsRht03/j+BaVrIgkTWh8nlQNuj+ieDL\nqEVUuGEAYqVcsSGskJFaGVUObbwyywGhVeDikLPCvkh8QwNTyF0OjfvtD/CPyYLi\nsOzmsr79zC8yWsTfiwe4d2uQ0RUTSdvYNwd9qcuYGX1rQX4q5PEDKsUNM/gJxnen\nArOL+0umZ6XG3ScOP0ZRymnwLViMF7Tjhkw14qCHDllC3J+mMav+rwIMYjkesZMO\nAbL6xUe9AgMBAAECggEAXjsvglISnoI7E6BrXz2nWv7vDW56sYZFTQ90OKF8btKx\nvQi7blcd9MOUO0fDC+8R/mOzkdxL3R6w2fQpfDcVBCP7fk0Rx3C3FZb1EaAMSzcZ\nHv8evfV8CCBVi72UqMAkQnTTaM+2EAZNuf+GVyEdUFmh/zoMoVkiJfiH0Z71UKW6\n9igkivgBB0Z6wUlOwP0mpogR+j5Y0e0Z/Eh/ScJfuJhmDNtlrFNcGDz1Y3ddtXjC\nnL/lHRTZU5EhuWZHXAs6jmv6YOnUlH9VYN6moKlBrtC2oeb1+FvKQC8yZdbrqMti\n7gj3bcAVFiiumGtp5DJrIP47hOGdw041EVvERTMA6QKBgQDkq67g19BO+lCDVnIm\nFp+Qh34FxoA5pzv4pK1kz76G9duptCpvO7nQXERFGMjPZTJZR82+lq1YaM+30SfM\nLghOkW910Go77e8ts9SMInwjuTg1+8WGG20Ym/odg6/LU4f69WpY2K/7jE/GzZpW\ns+FH/uEaeqywD5EASlVcGerT/wKBgQDUnJLPNSYbcqMxbcVGhjOmcVAKSULWoffW\nB0OiJVT6DPIPNKXOA3n8JVnq7ubuNZMv9Arcwc/rZT48fT1SDNaplF3jK/BoqDGW\nkGkvtxbvrzGRDtS+kgmgyqIQ9kgJtEM9F3DiUnqwA9DAdOWPOFiNSZ9boitqAKBP\ngSzKgMA0QwKBgC7UDcsTxx/1WPmcgWHVbjXd2Wv7W5Ty73Aa4Tts47qlrKdTMwF2\nfLXzvzNbQPxf3/CyqKqoFrWtOSSOm5TPtHnKhMXeuXKuZjW4xwUvprZ2HtHHTosJ\nIM1SW+Uha6W65HT7Px0Uuu1LraarwjiRO8hPpO+UQbsIZQxnLJXg5NsnAoGAWoL9\njPDXdD/tcZGFtmxTeLwskvR1W+JAHAGjrVevQXRZaFfFblrUh59vFDD4Ztiv/G4s\nYaaw2UmUoTO/8zo7+J2NCrUd97ACzFJWNVYAkbFHrLVfpHGPX8BkFkyChn8TUOK1\nz+PFD0HQkN4zDDG0oRGCogP773isxqv7YYpGSPkCgYB89iD+Ay+C8OcnC+iOd0jl\nAUOEKksJroGx9p/ENjICQC7XuSQztYBGbLiJDTojHcXMICcY8xvucdGeZopUBa6o\nncrlwnG4X3K4kHSoRqspvC6or2ZNChRKJr9gDlbwese7sEQH9eRfJS+gi6I49v+w\nygLgR03UG5jC+9x6ucRhpw==\n-----END PRIVATE KEY-----",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "RS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"valutazione\": [\r\n    { \"criterio\": \"Chiarezza\",   \"punteggio\": 8 },\r\n    { \"criterio\": \"Correttezza\", \"punteggio\": 9 },\r\n    { \"criterio\": \"Completezza\", \"punteggio\": 7 }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{review_url}}/api/v1/reviews/{{review_id}}",
					"host": [
						"{{review_url}}"
					],
					"path": [
						"api",
						"v1",
						"reviews",
						"{{review_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get complete reviews as student (after)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"La risposta è un array\", function () {\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Ogni oggetto ha i campi richiesti\", function () {\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(item).to.have.property(\"deadline\");\r",
							"        pm.expect(item).to.have.property(\"assignmentId\");\r",
							"        pm.expect(item).to.have.property(\"submissionId\");\r",
							"        pm.expect(item).to.have.property(\"reviewerId\");\r",
							"        pm.expect(item).to.have.property(\"createdAt\");\r",
							"        pm.expect(item).to.have.property(\"stato\");\r",
							"        pm.expect(item).to.have.property(\"valutazione\");\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test that each element in the valutazione array has the required properties\r",
							"pm.test(\"Each element in the valutazione array has the correct properties\", function () {\r",
							"    jsonData.forEach(item => {\r",
							"        if (item.valutazione) {\r",
							"            item.valutazione.forEach(function(valutazione) {\r",
							"                pm.expect(valutazione).to.have.all.keys('criterio', 'punteggio');\r",
							"                pm.expect(valutazione.punteggio).to.be.a('number');\r",
							"            });\r",
							"        }\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const iat = Math.floor(Date.now() / 1000);\r",
							"const exp = iat + 60 * 15; // 15 minuti\r",
							"\r",
							"pm.environment.set(\"jwt_iat\", iat);\r",
							"pm.environment.set(\"jwt_exp\", exp);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "payload",
							"value": "{\r\n  \"sub\": \"{{student_id}}\",\r\n  \"role\": \"student\",\r\n  \"iat\": {{jwt_iat}},\r\n  \"exp\": {{jwt_exp}}\r\n}",
							"type": "string"
						},
						{
							"key": "privateKey",
							"value": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC96giTw8Q8b71p\nqVzIibow9DEIf6mXPVFpq+ZN+7nHd9cvvjBkqbQLaVvE9KqEbuRxGEdWdJcqE0md\nEMuukhfM7kCav13sdtUk6CrEsmhKN72KYsRht03/j+BaVrIgkTWh8nlQNuj+ieDL\nqEVUuGEAYqVcsSGskJFaGVUObbwyywGhVeDikLPCvkh8QwNTyF0OjfvtD/CPyYLi\nsOzmsr79zC8yWsTfiwe4d2uQ0RUTSdvYNwd9qcuYGX1rQX4q5PEDKsUNM/gJxnen\nArOL+0umZ6XG3ScOP0ZRymnwLViMF7Tjhkw14qCHDllC3J+mMav+rwIMYjkesZMO\nAbL6xUe9AgMBAAECggEAXjsvglISnoI7E6BrXz2nWv7vDW56sYZFTQ90OKF8btKx\nvQi7blcd9MOUO0fDC+8R/mOzkdxL3R6w2fQpfDcVBCP7fk0Rx3C3FZb1EaAMSzcZ\nHv8evfV8CCBVi72UqMAkQnTTaM+2EAZNuf+GVyEdUFmh/zoMoVkiJfiH0Z71UKW6\n9igkivgBB0Z6wUlOwP0mpogR+j5Y0e0Z/Eh/ScJfuJhmDNtlrFNcGDz1Y3ddtXjC\nnL/lHRTZU5EhuWZHXAs6jmv6YOnUlH9VYN6moKlBrtC2oeb1+FvKQC8yZdbrqMti\n7gj3bcAVFiiumGtp5DJrIP47hOGdw041EVvERTMA6QKBgQDkq67g19BO+lCDVnIm\nFp+Qh34FxoA5pzv4pK1kz76G9duptCpvO7nQXERFGMjPZTJZR82+lq1YaM+30SfM\nLghOkW910Go77e8ts9SMInwjuTg1+8WGG20Ym/odg6/LU4f69WpY2K/7jE/GzZpW\ns+FH/uEaeqywD5EASlVcGerT/wKBgQDUnJLPNSYbcqMxbcVGhjOmcVAKSULWoffW\nB0OiJVT6DPIPNKXOA3n8JVnq7ubuNZMv9Arcwc/rZT48fT1SDNaplF3jK/BoqDGW\nkGkvtxbvrzGRDtS+kgmgyqIQ9kgJtEM9F3DiUnqwA9DAdOWPOFiNSZ9boitqAKBP\ngSzKgMA0QwKBgC7UDcsTxx/1WPmcgWHVbjXd2Wv7W5Ty73Aa4Tts47qlrKdTMwF2\nfLXzvzNbQPxf3/CyqKqoFrWtOSSOm5TPtHnKhMXeuXKuZjW4xwUvprZ2HtHHTosJ\nIM1SW+Uha6W65HT7Px0Uuu1LraarwjiRO8hPpO+UQbsIZQxnLJXg5NsnAoGAWoL9\njPDXdD/tcZGFtmxTeLwskvR1W+JAHAGjrVevQXRZaFfFblrUh59vFDD4Ztiv/G4s\nYaaw2UmUoTO/8zo7+J2NCrUd97ACzFJWNVYAkbFHrLVfpHGPX8BkFkyChn8TUOK1\nz+PFD0HQkN4zDDG0oRGCogP773isxqv7YYpGSPkCgYB89iD+Ay+C8OcnC+iOd0jl\nAUOEKksJroGx9p/ENjICQC7XuSQztYBGbLiJDTojHcXMICcY8xvucdGeZopUBa6o\nncrlwnG4X3K4kHSoRqspvC6or2ZNChRKJr9gDlbwese7sEQH9eRfJS+gi6I49v+w\nygLgR03UG5jC+9x6ucRhpw==\n-----END PRIVATE KEY-----",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "RS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						},
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{review_url}}/api/v1/reviews?stato=complete",
					"host": [
						"{{review_url}}"
					],
					"path": [
						"api",
						"v1",
						"reviews"
					],
					"query": [
						{
							"key": "stato",
							"value": "complete"
						}
					]
				}
			},
			"response": []
		}
	]
}